//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   float4 EmitterSpawnInfoOffsets[2]; // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint UpdateStartInstance;          // Offset:  320 Size:     4
//   uint ShaderStageIndex;             // Offset:  324 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  328 Size:     4 [unused]
//   uint SpawnedInstances;             // Offset:  332 Size:     4
//   uint ComponentBufferSizeRead;      // Offset:  336 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  340 Size:     4
//   int NumEventsPerParticle;          // Offset:  344 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  348 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  352 Size:     4 [unused]
//   uint SimStart;                     // Offset:  356 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  360 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  364 Size:     4
//   float3 TilingAxes_User_VectorField;// Offset:  368 Size:    12 [unused]
//   float3 Dimensions_User_VectorField;// Offset:  384 Size:    12 [unused]
//   float3 MinBounds_User_VectorField; // Offset:  400 Size:    12 [unused]
//   float3 MaxBounds_User_VectorField; // Offset:  416 Size:    12 [unused]
//   float MinTime_Color_ColorCurve;    // Offset:  428 Size:     4
//   float MaxTime_Color_ColorCurve;    // Offset:  432 Size:     4 [unused]
//   float InvTimeRange_Color_ColorCurve;// Offset:  436 Size:     4
//
// }
//
// cbuffer FEmitterParameters
// {
//
//   int Constants_Emitter_SphereLocation_RandomSeed;// Offset:    0 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SurfaceOnlyBandThickness;// Offset:    4 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SphereRadius;// Offset:    8 Size:     4
//   float4 Constants_Emitter_SphereLocation_NonUniformScale;// Offset:   16 Size:    16
//   float4 Engine_Owner_Position;      // Offset:   32 Size:    16
//   float4 Constants_Emitter_SphereLocation_Offset;// Offset:   48 Size:    16
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:   64 Size:    64
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  256 Size:    64 [unused]
//   int Emitter_RandomSeed;            // Offset:  320 Size:     4 [unused]
//   int Engine_System_TickCount;       // Offset:  324 Size:     4 [unused]
//   float Constants_Emitter_Vector2DFromFloat001_Value;// Offset:  328 Size:     4
//   float Constants_Emitter_UniformRangedFloat001_Minimum;// Offset:  332 Size:     4
//   float Constants_Emitter_UniformRangedFloat001_Maximum;// Offset:  336 Size:     4
//   int Constants_Emitter_UniformRangedFloat001_RandomSeed;// Offset:  340 Size:     4 [unused]
//   bool User_FieldUseExponentialFalloff;// Offset:  344 Size:     4 [unused]
//   int User_FieldCoordinates;         // Offset:  348 Size:     4 [unused]
//   bool User_FieldApplyFalloff;       // Offset:  352 Size:     4 [unused]
//   float User_FieldFalloffDistance;   // Offset:  356 Size:     4 [unused]
//   float4 User_FieldRotation;         // Offset:  368 Size:    16 [unused]
//   float4 User_FieldScale;            // Offset:  384 Size:    16 [unused]
//   float4 User_FieldLocation;         // Offset:  400 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_Rotation;      // Offset:  432 Size:    16 [unused]
//   float Constants_Emitter_SampleVectorField_SampledVectorScale;// Offset:  448 Size:     4 [unused]
//   float Engine_DeltaTime;            // Offset:  452 Size:     4
//   float4 Constants_Emitter_Color_ScaleColor;// Offset:  464 Size:    16
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  480 Size:     4
//   float Emitter_AlphaScale;          // Offset:  484 Size:     4
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  488 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  492 Size:     4 [unused]
//   float Engine_Time;                 // Offset:  496 Size:     4 [unused]
//   float Engine_InverseDeltaTime;     // Offset:  500 Size:     4
//   int Engine_ExecutionCount;         // Offset:  504 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  508 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:  512 Size:     4
//   int PREV_Constants_Emitter_SphereLocation_RandomSeed;// Offset:  516 Size:     4 [unused]
//   float PREV_Constants_Emitter_SphereLocation_SurfaceOnlyBandThickness;// Offset:  520 Size:     4 [unused]
//   float PREV_Constants_Emitter_SphereLocation_SphereRadius;// Offset:  524 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_SphereLocation_NonUniformScale;// Offset:  528 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  544 Size:    16
//   float4 PREV_Constants_Emitter_SphereLocation_Offset;// Offset:  560 Size:    16 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  576 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  640 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  704 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  768 Size:    64 [unused]
//   int PREV_Emitter_RandomSeed;       // Offset:  832 Size:     4 [unused]
//   int PREV_Engine_System_TickCount;  // Offset:  836 Size:     4 [unused]
//   float PREV_Constants_Emitter_Vector2DFromFloat001_Value;// Offset:  840 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat001_Minimum;// Offset:  844 Size:     4 [unused]
//   float PREV_Constants_Emitter_UniformRangedFloat001_Maximum;// Offset:  848 Size:     4 [unused]
//   int PREV_Constants_Emitter_UniformRangedFloat001_RandomSeed;// Offset:  852 Size:     4 [unused]
//   bool PREV_User_FieldUseExponentialFalloff;// Offset:  856 Size:     4 [unused]
//   int PREV_User_FieldCoordinates;    // Offset:  860 Size:     4 [unused]
//   bool PREV_User_FieldApplyFalloff;  // Offset:  864 Size:     4 [unused]
//   float PREV_User_FieldFalloffDistance;// Offset:  868 Size:     4 [unused]
//   float4 PREV_User_FieldRotation;    // Offset:  880 Size:    16 [unused]
//   float4 PREV_User_FieldScale;       // Offset:  896 Size:    16 [unused]
//   float4 PREV_User_FieldLocation;    // Offset:  912 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Scale;    // Offset:  928 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Rotation; // Offset:  944 Size:    16 [unused]
//   float PREV_Constants_Emitter_SampleVectorField_SampledVectorScale;// Offset:  960 Size:     4 [unused]
//   float PREV_Engine_DeltaTime;       // Offset:  964 Size:     4 [unused]
//   float4 PREV_Constants_Emitter_Color_ScaleColor;// Offset:  976 Size:    16 [unused]
//   float PREV_Constants_Emitter_Color_ScaleAlpha;// Offset:  992 Size:     4 [unused]
//   float PREV_Emitter_AlphaScale;     // Offset:  996 Size:     4 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset: 1000 Size:     4 [unused]
//   float PREV_Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset: 1004 Size:     4 [unused]
//   float PREV_Engine_Time;            // Offset: 1008 Size:     4 [unused]
//   float PREV_Engine_InverseDeltaTime;// Offset: 1012 Size:     4 [unused]
//   int PREV_Engine_ExecutionCount;    // Offset: 1016 Size:     4 [unused]
//   float PREV_Emitter_SpawnRate;      // Offset: 1020 Size:     4 [unused]
//   int PREV_Engine_Emitter_TotalSpawnedParticles;// Offset: 1024 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// CurveLUT_Color_ColorCurve         texture   float         buf             t2      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FEmitterParameters                cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[28], dynamicIndexed
dcl_constantbuffer CB1[35], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadID.x
dcl_temps 8
dcl_thread_group 64, 1, 1
iadd r0.x, vThreadID.x, cb0[20].x
ieq r0.y, cb0[22].z, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].zzzz, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r1.x, r0.y, cb0[20].w
iadd r0.z, r1.x, cb0[20].x
ult r0.z, r0.x, r0.z
if_nz r0.z
  ult r0.z, r0.x, r0.y
  if_nz r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.xxxx, t0.yzxw
    imad r2.xyzw, l(5, 6, 9, 10), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r0.w, r2.xxxx, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r1.y, r2.yyyy, t0.yxzw
    ishl r3.xyzw, cb0[21].xyyy, l(3, 1, 2, 3)
    iadd r1.z, r0.x, r3.x
    ld_indexable(buffer)(float,float,float,float) r1.z, r1.zzzz, t0.yzxw
    ld_indexable(buffer)(float,float,float,float) r1.w, r2.zzzz, t0.yzwx
    ld_indexable(buffer)(float,float,float,float) r2.x, r2.wwww, t0.xyzw
    imad r2.yz, l(0, 14, 15, 0), cb0[21].xxxx, r0.xxxx
    ld_indexable(buffer)(float,float,float,float) r2.y, r2.yyyy, t0.yxzw
    ld_indexable(buffer)(float,float,float,float) r2.z, r2.zzzz, t0.yzxw
    ld_indexable(buffer)(sint,sint,sint,sint) r2.w, r0.xxxx, t1.yzwx
    add r0.z, r0.z, cb1[28].y
    max r3.x, r0.w, l(0.000010)
    add r4.x, r3.x, l(-0.000100)
    lt r4.x, r0.z, r4.x
    div r3.x, r0.z, r3.x
    add r4.y, r3.x, -cb0[26].w
    mul_sat r4.y, r4.y, cb0[27].y
    mul r4.z, r4.y, l(127.000000)
    round_ni r4.z, r4.z
    lt r4.w, r4.z, l(127.000000)
    add r5.x, r4.z, l(1.000000)
    mad r4.y, r4.y, l(127.000000), -r4.z
    mul r5.y, r4.z, l(4.000000)
    mul r5.x, r5.x, l(4.000000)
    movc r4.w, r4.w, r5.x, l(508.000000)
    ftou r5.x, r5.y
    ld_indexable(buffer)(float,float,float,float) r5.x, r5.xxxx, t2.xyzw
    mad r6.xyz, r4.zzzz, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r6.xyz, r6.xyzx
    ld_indexable(buffer)(float,float,float,float) r5.y, r6.xxxx, t2.yxzw
    ld_indexable(buffer)(float,float,float,float) r5.z, r6.yyyy, t2.yzxw
    ld_indexable(buffer)(float,float,float,float) r5.w, r6.zzzz, t2.yzwx
    ftou r4.z, r4.w
    ld_indexable(buffer)(float,float,float,float) r6.x, r4.zzzz, t2.xyzw
    add r7.xyz, r4.wwww, l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r7.xyz, r7.xyzx
    ld_indexable(buffer)(float,float,float,float) r6.y, r7.xxxx, t2.yxzw
    ld_indexable(buffer)(float,float,float,float) r6.z, r7.yyyy, t2.yzxw
    ld_indexable(buffer)(float,float,float,float) r6.w, r7.zzzz, t2.yzwx
    add r6.xyzw, -r5.xyzw, r6.xyzw
    mad r5.xyzw, r4.yyyy, r6.xyzw, r5.xyzw
    mul r4.yzw, r5.xxyz, cb1[29].xxyz
    mul r5.x, r5.w, cb1[30].x
    mul r5.x, r5.x, cb1[30].y
    ieq r4.x, r4.x, l(-1)
    if_nz r4.x
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r4.x, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r4.xxxx, r0.zzzz
    iadd r0.z, r1.x, cb0[21].y
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r4.yyyy
    iadd r3.yzw, r1.xxxx, r3.yyzw
    iadd r3.yzw, r3.yyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.yyyy, r4.zzzz
    imad r4.yz, l(0, 3, 5, 0), cb0[21].yyyy, r1.xxxx
    iadd r4.yz, r4.yyzy, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.yyyy, r4.wwww
    store_uav_typed u1.xyzw, r3.zzzz, r5.xxxx
    store_uav_typed u1.xyzw, r4.zzzz, r0.wwww
    imad r5.xyzw, l(6, 7, 9, 10), cb0[21].yyyy, r1.xxxx
    iadd r5.xyzw, r5.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r5.xxxx, r1.yyyy
    store_uav_typed u1.xyzw, r5.yyyy, r3.xxxx
    store_uav_typed u1.xyzw, r3.wwww, r1.zzzz
    store_uav_typed u1.xyzw, r5.zzzz, r1.wwww
    store_uav_typed u1.xyzw, r5.wwww, r2.xxxx
    imad r3.xyzw, l(11, 12, 13, 14), cb0[21].yyyy, r1.xxxx
    iadd r3.xyzw, r3.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.xxxx, l(0,0,0,0)
    store_uav_typed u1.xyzw, r3.yyyy, l(0,0,0,0)
    store_uav_typed u1.xyzw, r3.zzzz, l(0,0,0,0)
    store_uav_typed u1.xyzw, r3.wwww, r2.yyyy
    imad r1.yzw, l(0, 15, 17, 18), cb0[21].yyyy, r1.xxxx
    iadd r1.yzw, r1.yyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r1.yyyy, r2.zzzz
    store_uav_typed u0.xyzw, r4.xxxx, r2.wwww
    ishl r0.z, cb0[21].y, l(4)
    iadd r0.z, r1.x, r0.z
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, l(0,0,0,0)
    store_uav_typed u1.xyzw, r1.zzzz, l(0,0,0,0)
    store_uav_typed u1.xyzw, r1.wwww, l(0,0,0,0)
  else 
    iadd r0.x, -r0.y, r0.x
    itof r0.y, r0.x
    ge r2.xyzw, r0.yyyy, cb0[10].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ge r2.xyzw, r0.yyyy, cb0[11].xyzw
    and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
    dp4 r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzw
    ftoi r0.yz, r0.yyzy
    iadd r0.y, r0.y, r0.z
    iadd r0.z, r0.x, -cb0[r0.y + 12].w
    iadd r0.x, r0.x, cb1[32].x
    itof r0.z, r0.z
    mad r0.y, cb0[r0.y + 12].x, r0.z, cb0[r0.y + 12].y
    add r0.z, -r0.y, cb1[28].y
    mul r0.y, r0.y, cb1[31].y
    add r1.yzw, cb1[2].xxyz, -cb1[34].xxyz
    mad r1.yzw, r0.yyyy, r1.yyzw, cb1[34].xxyz
    imul null, r2.x, vThreadID.x, l(0x0019660d)
    imul null, r2.y, cb0[9].z, l(0x0019660d)
    iadd r0.yw, r2.xxxy, l(0, 0x3c6ef35f, 0, 0x3c6ef35f)
    imad r2.xy, r0.yyyy, r0.yyyy, l(0x3c3c2745, 0x3c22c138, 0, 0)
    imad r2.zw, r0.wwww, r2.xxxy, r0.yyyy
    imad r3.xy, r2.xyxx, r2.zwzz, r0.wwww
    imad r0.yw, r2.zzzw, r3.xxxy, r0.yyyy
    imad r4.xy, r2.zwzz, r0.ywyy, r2.xyxx
    imad r4.z, r3.x, r4.x, r2.z
    imad r4.w, r4.x, r4.z, r3.x
    ishr r2.xyzw, r4.xzwy, l(8, 8, 8, 8)
    and r2.xyzw, r2.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r2.xyzw, r2.xyzw
    mad r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, -1.000000, 0.000000, 0.000000)
    sincos r2.x, r3.x, r2.x
    mad r0.y, -r2.y, r2.y, l(1.000000)
    sqrt r0.y, r0.y
    mul r3.x, r0.y, r3.x
    mul r3.y, r0.y, r2.x
    log r0.y, r2.z
    mul r0.y, r0.y, l(0.333333)
    exp r0.y, r0.y
    mov r3.z, r2.y
    mul r2.xyz, r0.yyyy, r3.xyzx
    mul r2.xyz, r2.xyzx, cb1[0].zzzz
    mul r2.xyz, r2.xyzx, cb1[1].xyzx
    add r1.yzw, r1.yyzw, cb1[3].xxyz
    mul r3.xyz, r2.yyyy, cb1[5].xyzx
    mad r3.xyz, r2.xxxx, cb1[4].xyzx, r3.xyzx
    mad r2.xyz, r2.zzzz, cb1[6].xyzx, r3.xyzx
    add r1.yzw, r1.yyzw, r2.xxyz
    add r0.y, -cb1[20].w, cb1[21].x
    mul r0.y, r0.y, r2.w
    mad r0.y, r0.y, l(0.000000), cb1[20].w
    max r0.w, r0.y, l(0.000010)
    add r2.x, r0.w, l(-0.000100)
    lt r2.x, r0.z, r2.x
    div r0.w, r0.z, r0.w
    add r2.y, r0.w, -cb0[26].w
    mul_sat r2.y, r2.y, cb0[27].y
    mul r2.z, r2.y, l(127.000000)
    round_ni r2.z, r2.z
    lt r2.w, r2.z, l(127.000000)
    add r3.x, r2.z, l(1.000000)
    mad r2.y, r2.y, l(127.000000), -r2.z
    mul r3.y, r2.z, l(4.000000)
    mul r3.x, r3.x, l(4.000000)
    movc r2.w, r2.w, r3.x, l(508.000000)
    ftou r3.x, r3.y
    ld_indexable(buffer)(float,float,float,float) r3.x, r3.xxxx, t2.xyzw
    mad r4.xyz, r2.zzzz, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r4.xyz, r4.xyzx
    ld_indexable(buffer)(float,float,float,float) r3.y, r4.xxxx, t2.yxzw
    ld_indexable(buffer)(float,float,float,float) r3.z, r4.yyyy, t2.yzxw
    ld_indexable(buffer)(float,float,float,float) r3.w, r4.zzzz, t2.yzwx
    ftou r2.z, r2.w
    ld_indexable(buffer)(float,float,float,float) r4.x, r2.zzzz, t2.xyzw
    add r5.xyz, r2.wwww, l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r5.xyz, r5.xyzx
    ld_indexable(buffer)(float,float,float,float) r4.y, r5.xxxx, t2.yxzw
    ld_indexable(buffer)(float,float,float,float) r4.z, r5.yyyy, t2.yzxw
    ld_indexable(buffer)(float,float,float,float) r4.w, r5.zzzz, t2.yzwx
    add r4.xyzw, -r3.xyzw, r4.xyzw
    mad r3.xyzw, r2.yyyy, r4.xyzw, r3.xyzw
    mul r2.yzw, r3.xxyz, cb1[29].xxyz
    mul r3.x, r3.w, cb1[30].x
    mul r3.x, r3.x, cb1[30].y
    ieq r2.x, r2.x, l(-1)
    if_nz r2.x
      imm_atomic_iadd r1.x, u2, cb0[22].w, l(1)
    endif 
    iadd r2.x, r1.x, cb0[20].x
    store_uav_typed u1.xyzw, r2.xxxx, r0.zzzz
    iadd r0.z, r1.x, cb0[21].y
    iadd r0.z, r0.z, cb0[20].x
    store_uav_typed u1.xyzw, r0.zzzz, r2.yyyy
    ishl r4.xyzw, cb0[21].yyyy, l(1, 2, 3, 4)
    iadd r4.xyzw, r1.xxxx, r4.xyzw
    iadd r4.xyzw, r4.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r4.xxxx, r2.zzzz
    imad r5.xyzw, l(3, 5, 6, 7), cb0[21].yyyy, r1.xxxx
    iadd r5.xyzw, r5.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r5.xxxx, r2.wwww
    store_uav_typed u1.xyzw, r4.yyyy, r3.xxxx
    store_uav_typed u1.xyzw, r5.yyyy, r0.yyyy
    store_uav_typed u1.xyzw, r5.zzzz, l(1.000000,1.000000,1.000000,1.000000)
    store_uav_typed u1.xyzw, r5.wwww, r0.wwww
    store_uav_typed u1.xyzw, r4.zzzz, r1.yyyy
    imad r3.xyzw, l(9, 10, 11, 12), cb0[21].yyyy, r1.xxxx
    iadd r3.xyzw, r3.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.xxxx, r1.zzzz
    store_uav_typed u1.xyzw, r3.yyyy, r1.wwww
    store_uav_typed u1.xyzw, r3.zzzz, l(0,0,0,0)
    store_uav_typed u1.xyzw, r3.wwww, l(0,0,0,0)
    imad r3.xyzw, l(13, 14, 15, 17), cb0[21].yyyy, r1.xxxx
    iadd r3.xyzw, r3.xyzw, cb0[20].xxxx
    store_uav_typed u1.xyzw, r3.xxxx, l(0,0,0,0)
    store_uav_typed u1.xyzw, r3.yyyy, cb1[20].zzzz
    store_uav_typed u1.xyzw, r3.zzzz, cb1[20].zzzz
    store_uav_typed u0.xyzw, r2.xxxx, r0.xxxx
    store_uav_typed u1.xyzw, r4.wwww, l(0,0,0,0)
    store_uav_typed u1.xyzw, r3.wwww, l(0,0,0,0)
    imad r0.x, l(18), cb0[21].y, r1.x
    iadd r0.x, r0.x, cb0[20].x
    store_uav_typed u1.xyzw, r0.xxxx, l(0,0,0,0)
  endif 
endif 
ret 
// Approximately 224 instruction slots used
